on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  publish-gh-pages:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust toolchains
        uses: dtolnay/rust-toolchain@stable
      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '18'
      - name: Build standalone_app
        env:
          PUBLIC_PATH: /optuna-dashboard/public/
        run: make MODE="prd" standalone_app/public/bundle.js
      - name: Create publish directory
        run: |
          mkdir gh-publish
          cp -r standalone_app/public gh-publish/public
          cp standalone_app/favicon.ico gh-publish/favicon.ico
      - name: Create index.html
        run: |
          cp standalone_app/index.html gh-publish/index.html
          sed -i "s|/public/bundle.js|/optuna-dashboard/public/bundle.js|g" ./gh-publish/index.html
          sed -i "s|/favicon.ico|/optuna-dashboard/favicon.ico|g" ./gh-publish/index.html
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: './gh-publish'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
